package com.example.demo.service;

import com.example.demo.entity.UserBean;
import com.example.demo.entity.UserContainer;
import com.example.demo.repository.UserContainerRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.util.*;

@Component
@Service
public class UserContainerService{

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserContainerRepository userContainerRepository;

    public List<String> findByUserid (Integer userid){
        List<UserContainer> tmp=userContainerRepository.findByUserid(userid);
        List<String> res=new ArrayList<>();
        for(UserContainer i:tmp){
            res.add(i.getContainerid());
        }
        return res;
    }

    public void save(UserContainer userContainer){
        userContainerRepository.save(userContainer);
    }

    @Transactional
    public void delete(String containerid){
        List<UserContainer> tmp=userContainerRepository.deleteByContainerid(containerid);
    }



}


//    @Autowired //是用在JavaBean中的注解，通过byType形式，用来给指定的字段或方法注入所需的外部资源。
//    private JdbcTemplate jdbcTemplate; //jdbc连接工具类
//    public List<UserContainer> findall11() {
//        String sql = "select * from usercontainer";
//        return jdbcTemplate.query(sql, new BeanPropertyRowMapper<UserContainer>(UserContainer.class));
//    }
//
//    @Override
//    public List<UserBean> findall() {
//        String sql = "select * from test_user";
//        if(jdbcTemplate.query(sql, new BeanPropertyRowMapper<UserBean>(UserBean.class))!=null){
//            System.out.println("这不是空的");
//            return jdbcTemplate.query(sql, new BeanPropertyRowMapper<UserBean>(UserBean.class));
//        }else{
//            System.out.println("这是空的");
//            return null;
//        }
////        return jdbcTemplate.query(sql, new BeanPropertyRowMapper<UserBean>(UserBean.class));